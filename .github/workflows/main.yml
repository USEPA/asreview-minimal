name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  ci-py:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Setup python'
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "pdm.lock"

      - name: 'Cache pyprojectx'
        uses: actions/cache@v4
        with:
          path: .pyprojectx
          key: ${{ hashFiles('pyproject.toml') }}-${{ env.pythonLocation }}-pyprojectx

      - name: 'Cache Python Dependencies'
        uses: actions/cache@v4
        with:
          path: |
            .venv
            __pypackages__
            ~/.cache/pdm
            ~/.local/share/pdm/venvs
          key: deps-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pdm.lock') }}

      - name: 'Check lockfile'
        run: python pw run check

      - name: 'Initialize repo'
        run: python pw run init

      - name: 'Lint'
        run: python pw lint

      - name: 'Build package'
        run: python pw run build

      - name: 'Install Wheel'
        run: pip install dist/*.whl

      - name: 'Test'
        run: python test.py

      - name: 'Save wheel'
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/

  release:
    # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
    name: 'Release package'
    needs:
      - ci-py
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: 'Download source'
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist/

      - name: 'Create GitHub Release'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes "Update to asreview ${{ github.ref_name }}."
          --latest
          --verify-tag

      - name: 'Upload artifact GitHub Release'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
